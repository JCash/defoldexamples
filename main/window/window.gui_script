local function set_text(text)
    local node = gui.get_node("text")
    gui.set_text(node, text)
end

local function add_event(evt)
    local node = gui.get_node("events")
    local text = gui.get_text(node)
    print(evt)
    text = evt .. "\n" .. text
    gui.set_text(node, text)
end


local function window_callback(self, event, data)
    if event == window.WINDOW_EVENT_FOCUS_LOST then
        add_event("window.WINDOW_EVENT_FOCUS_LOST")
    elseif event == window.WINDOW_EVENT_FOCUS_GAINED then
        add_event("window.WINDOW_EVENT_FOCUS_GAINED")
    elseif event == window.WINDOW_EVENT_RESIZED then
        add_event("window.WINDOW_EVENT_RESIZED ", data.width, data.height)
    elseif event == window.WINDOW_EVENT_MOUSE_ENTER then
        add_event("window.WINDOW_EVENT_MOUSE_ENTER")
    elseif event == window.WINDOW_EVENT_MOUSE_LEAVE then
        add_event("window.WINDOW_EVENT_MOUSE_LEAVE")
    end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    window.set_listener(window_callback)
end


function on_input(self, action_id, action)
    if action_id == hash("show") then
        window.show_mouse_cursor()
    elseif action_id == hash("hide") then
        window.hide_mouse_cursor()
    else
        
        local text = "dx/dy: " .. action.dx .. ", " .. action.dy .. "\n"
        text = text .. "x/y:   " .. action.x .. ", " .. action.y .. "\n"
        set_text(text)
    end
    
end
